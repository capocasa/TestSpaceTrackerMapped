
TestPlayBufM : UnitTest {

  var s, b, x, r, t, w, r;

  setUp {
    s = Server.default;
    this.bootServer(s);
    s.notify;
  }

  assertPlay {
    s.sync;
    x = {
      RecordBuf.kr(PlayBufM.kr(b, doneAction: 2), t);
    }.play;
    w = NodeWatcher.register(x, true);
    this.asynchAssert { x.isPlaying == false } {
      t.getToFloatArray (action:{|c|
        this.assertEquals(c, r, "play");
      });
    };
  }

  test_simple {
    t = Buffer.alloc(s, 384, 3);
    b = [Buffer.sendCollection(s, [0.1, 32, 64, 0,0.15,33,65,0.5,0.2,34,66,1.5], 4), 2, Buffer.sendCollection(s, [0.1,100,0.1,101,0.1,103,0.1,104,0.1,105,0.1,106,0.1,107], 2)];
    r = FloatArray[ 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 32.0, 64.0, 100.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 101.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 33.0, 65.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 103.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 104.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 34.0, 66.0, 105.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ];
    this.assertPlay; 
  }
}

TestRecordBufM : UnitTest {
  var s, b, x, r, t, w, r;

  setUp {
    s = Server.default;
    this.bootServer(s);
    s.notify;
  }

  assertRecord {
    s.sync;
    x = {
      RecordBufM.kr(PlayBuf.kr(b, doneAction: 2), t);
    }.play;
    w = NodeWatcher.register(x, true);
    this.asynchAssert { x.isPlaying == false } {
      t.getToFloatArray (action:{|c|
        this.assertEquals(c, r, "play");
      });
    };
  }

}

TestArrayExtM : UnitTest {
}

